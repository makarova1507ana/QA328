# #-------------------------------разбор задач-----------------------------------#

# for элемент  in  выбор диапозона
#Распечатайте все числа (должны быть только положительные), которые делятся на 3 без остатка от start до end(включительно)
#(start, end - могут быть перепутаны), start , end- гарантируется, что целые числа. Найти в этом наборе числа, которые делится на три без остатка
# start = int(input("Введите первое число интервала: "))
# end = int(input("Введите второе число интервала: "))
# for i in range(start, end+1) or range(end, start+1):
#    if i % 3 == 0:
#        print(i)


#while (условие) -> bool (true or false)
#if  (условие) -> bool (true or false)

# # (условие) нужно формировать таким образом,
# # чтобы была возможность выбрать непустую коллекцию
# #  for i in (условие): -> тип данных останется без преобразования
# for el in [] or 'abcd' or [1, 23]: #будет выбрана первая коллекая слева направо
#     print(el)










#   Задание 1
# Зарплата менеджера составляет 200$ + процент от продаж, продажи до 500$ — 3%, от 500 до 1000
# — 5%, свыше 1000 — 8%. Пользователь вводит с клавиатуры уровень продаж для трех менеджеров.
#
#
# Определить их зарплату, определить лучшего менеджера, начислить ему премию
# 200$, вывести итоги на экран.

# a = int(input("Введите уровень продаж Атос:"))
# b = int(input("Введите уровень продаж Партос:"))
# c = int(input("Введите уровень продаж Арамис:"))
# # считаем надбавку к зп
# if a < 500:
#     a = 200 + a * 3 / 100 # превращаем в зп
# elif 500 <= a < 1000:
#     a = 200 + a * 5 / 100 # превращаем в зп
# elif a >= 1000:
#     a = 200 + a * 8 / 100
#
# if b < 500:
#     b = 200 + b * 3 / 100
# elif 500 <= b < 1000:
#     b = 200 + b * 5 / 100
# elif 1000 <= b:
#     b = 200 + b * 8 / 100
#
# if c < 500:
#     c = 200 + c * 3 / 100
# elif 500 <= c < 1000:
#     c = 200 + c * 5 / 100
# elif 1000 <= c:
#     c = 200 + c * 8 / 100
#
# # ищем лучшего
# if a > b and a > c:
#     a = a + 200
#     print("атос лучший сотрудник, его премия 200 баксов")
#     print("атос-",a , " партос -",b ,"арамис - ,",c )
# elif b > a and b > c:
#     b = b + 200
#     print("партос лучший сотрудник, его премия 200 баксов")
#     print("атос-", a, " партос -", b, "арамис - ,", c)
# elif c > b and c > a:
#     c = c + 200
#     print("арамис лучший сотрудник, его премия 200 баксов")
#     print("атос-", a, " партос -", b, "арамис - ,", c)


# # ------------------2 новый способ-----------------#
# a = int(input("Введите уровень продаж Атос:"))
# b = int(input("Введите уровень продаж Партос:"))
# c = int(input("Введите уровень продаж Арамис:"))
# salaries = [a, b, c] #
# print(salaries)
# for i, salary in enumerate(salaries):
#     # считаем зп
#     if salary < 500:
#         salaries[i] = 200 + salary * 3 / 100
#     elif 500 <= salary < 1000:
#         salaries[i] = 200 + salary * 5 / 100
#     elif salary >= 1000:
#         salaries[i] = 200 + salary * 8 / 100
# # # ищем лучшего
# print(salaries, 'max salary:', max(salaries))
# для исследований самостоятельных
# print(salaries[0])
# salaries[0] = 0
# print(salaries)


#
#
# # ## напишите программу для черепахи,
# # # чтобы она рисовала вот так (кол-во ступенек произвольное)
#
# import turtle
# t = turtle.Turtle()
# colors = ["yellow", "red", "purple", 'green', 'black']
# count = 15#кол-во ступенек может меняться
# lengths = 10
# while count != 0:
#     for color in colors[:count]: # кол-во ступенек зависит от цвета
#         t.pencolor(color)
#
#         # рисуем ступеньку
#         t.left(90)
#         t.forward(lengths)
#         t.right(90)
#         t.forward(lengths)
#
#         # для следующей ступеньки больше делаем
#         lengths += 10
#
#         # прошли и уменьшили кол-во ступенек который отрисовать
#         count -= 1
#
#
# turtle.done()












#
# --------------------------------------- списки ----------------------------------#
# list(список): набор значений произвольного типа данных
#
# Просмотр элементов
# Добавление элементов
# Редактирование элементов
# Удаление элементов
#
#
#
# l = [] # пустой список
prices = [50, 70, 100, 60, 50, 50.5]
#
# # Просмотр элементов
# print("все за одну печать\n", prices)
# #
# print("-----------------------------")
# print("конкретный элемент\n", prices[2])#prices[индекс]   индекс - это номер места
#
# print("--------------отрицательный индекс---------------")
# print("последний элемент списка\n", prices[-1])#




# print("-----------------------------\nперебор всех элементов\n")
# for price in prices:
#     print(price)
#
# print("-----------------------------\nперебор всех элементов по индекс\n")
# for index, price in enumerate(prices): # 0 -> последнего элемента списка по номеру
#     print(f"""
# индекс = {index}
# элемент = {price}
# и это тоже элемент, но записан price[{index}] = {prices[index]}""")
#

# #------------------------------------- Редактирование элементов -----------------------------------#
# print(prices)
# prices[2] = 443
# print(prices)


# -------------------------------------- Задача ---------------------------------------------
# дан список (массив) -> сами выбираете исходя из условия задачи пример ->[54, 434]
# напечатайте элементы списка, которые делятся 5 без остатка

# #
# nums = []
# count = int(input("сколько чисел хотите ввести?"))
# for i in range(count):
#     nums.append(int(input("введи число: "))) # append- добавляет в конец списка
# print(nums)
#
# for num in nums:
#     if num % 5 == 0:
#         print(num)





# # # ------------------------------ Добавление элементов -------------------------#
# # # l = []
# # # l.append(элемент для встaвки) - вставляет в конец списка
# # # l.insert(куда вставляем, элемент для встaвки) -  туда куда сказали туда и вставили
# l = [1, 2, 3]
# #print(l[55])# ошибка потому что индекса не существует
# l.append(5)
# print(l) # 5 увидим в конце
# l.insert(1, 9)
# print(l)# 9 увидим на 1 индексе



# -------------------------------------- Задача ---------------------------------------------
# создать список в котором будет произвольное-кол-во элементов
# #---------------------------1------------------------#
# можно использовать, но осторожно
# l = list(map(lambda el: int(el), input("введите через пробел числа: ").split()))
# print(l)

# #---------------------------2------------------------#
# import random #as r - в нашем коде даем новое имя
# #print(random.randint(1, 10)) # для получения int
# #print(random.uniform(10.5, 50.5))#для получения float
#
# length_of_list = random.randint(0, 30)
# nums = []
# for i in range(length_of_list):
#     nums.append(random.randint(-50, 50))
#
# print(nums)




# # -------------------------------------- Задача ---------------------------------------------
# # создать список, в котором будет произвольное кол-во элементов,
# # в списке должны быть только отрицательные элементы
# import random
# length_of_list = random.randint(0, 30)
# nums = []
# for i in range(length_of_list):
#     nums.append(random.randint(-100, -1))
#
# print(nums)






# # -------------------------------------- Задача ---------------------------------------------
# # использовать модуль random
# # создать список в котором будет произвольное кол-во элементов,
# # в списке должны быть ровно три 0
# # пустой
# # или минимум длиной 3 и со всеми 0
# # или больше, но ровно с 3-мя 0
#
#
# import random
# length_of_list = random.randint(0, 10)
#
# nums = []
# if length_of_list >= 3:
#     nums = [0, 0, 0]
#
# for i in range(length_of_list):
#     # получаем случайно положительное или отрицательное число, кроме 0
#     if random.randint(0, 1):
#         num = random.randint(1, 100)
#     else:
#         num = random.randint(-100, -1)
#
#     nums.insert(random.randint(0, len(nums)-1), num)
#
# print(nums)


# # ------------------------------ Удаление элементов -------------------------#
# nums = [1, 2, 3, 5, 3]
#
# # print(nums)
# # nums.remove(3) # будет удален первый элемент, который был найден
# # print(nums)
#
# # print(nums)
# # nums.pop(1) # пишем индекс
# # print(nums)


# -------------------------------Анализ элементов списка----------------------------------------------#
# #len() - вычисляет фактическую длину списка
# # max()
# # min()
# # sum()
# nums = [54, 34, 4, 23, 4, 232, 4]
# print("кол-во 4: ", nums.count(4))
# nums.sort() # в порядке возрастания
# print(nums)
# nums.reverse()#
# print(nums)





# ---------------------------------- Задача ---------------------------------------- #
# Дан список чисел.
# Поменять местами 0-ой и последний списка
#  узнать наибольший элемент списка
# посчитать кол-во чисел, которые встречаются больше 1 раза

nums = [5, 43, 2, 0, 3, 2, 5, 43, 5]
# Поменять местами 0-ой и последний списка
nums[0], nums[-1] = nums[-1], nums[0]
print(nums)

#  узнать наибольший элемент списка
print(max(nums))

# посчитать кол-во чисел, которые встречаются больше 1 раза
non_unique_nums = []
for num in nums:
    if nums.count(num) > 1:
        if not num in non_unique_nums:  # Если нет числа в списке
            non_unique_nums.append(num)

print(non_unique_nums, "кол-во элементов:", len(non_unique_nums))

